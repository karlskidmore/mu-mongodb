Parameters:
  DatabaseMasterPassword:
    Type: String
    Default: secretpassword
    Description: Database Password used for MongoDB Administrator User
  DatabaseName:
    Type: String
    Default: stelligent
    Description: Database Name to be created in MongoDB
  DatabaseMasterUsername:
    Type: String
    Default: stelligent
    Description: Database Admin username to be created for MongoDB
  DatabaseInstanceSize:
    Type: String
    Default: t2.medium
    Description: Instance Size to launch from
  DatabasePort:
    Type: String
    Default: 27017
    Description: Port to bind the MongoDB service to
  BaseAMI:
    Type: String
    Default: ami-55ef662f
    Description: Base AMI to build from (should be Amazon Linux)
Resources:
  MongoSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access to Mongo"
      VpcId:
        Fn::ImportValue: !Sub ${VpcId}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DatabasePort
          ToPort: !Ref DatabasePort
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub ${InstanceSecurityGroup}
  MongoDbInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          SetupAndInstall:
            - "Setup"
            - "Install"
        Setup:
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MongoDbInstance --configsets SetupAndInstall --region ${AWS::Region}
                runas=root
            "/etc/yum.repos.d/mongodb-org-3.0.repo":
              content: !Sub |
                [mongodb-org-3.0]
                name=MongoDB Repository
                baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.0/x86_64/
                gpgcheck=0
                enabled=1
              mode: '000400'
              owner: root
              group: root
        Install:
          packages:
            yum:
              mongodb-org: []
          files:
            "/etc/mongod.conf":
              content: !Sub |
                # mongod.conf

                # where to write logging data.
                systemLog:
                  destination: file
                  logAppend: true
                  path: /var/log/mongodb/mongod.log

                # Where and how to store data.
                storage:
                  dbPath: /var/lib/mongo
                  journal:
                    enabled: true

                # how the process runs
                processManagement:
                  fork: true  # fork and run in background
                  pidFilePath: /var/run/mongodb/mongod.pid  # location of pidfile

                # network interfaces
                net:
                  port: ${DatabasePort}

                security:
                  authorization: 'enabled'
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              mongod:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - "/etc/mongod.conf"

    Properties:
      ImageId: !Ref BaseAMI
      SecurityGroupIds:
        - Ref: "MongoSG"
      InstanceType: !Ref DatabaseInstanceSize
      SubnetId:
        Fn::Select:
          - 0
          - Fn::ImportValue: !Sub ${InstanceSubnetIds}
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MongoDbInstance --configsets SetupAndInstall --region ${AWS::Region}

          # Create Database User
          /usr/bin/mongo admin --eval "db.createUser({ user: '${DatabaseMasterUsername}', pwd: '${DatabaseMasterPassword}', roles: [ { role: 'root', db: 'admin' } ] });"


Outputs:
  DatabaseName:
    Description: DB Name
    Value: !Ref DatabaseName
  DatabaseMasterUsername:
    Description: DB Username
    Value: !Ref DatabaseMasterUsername
  DatabaseEndpointAddress:
    Description: DB Endpoint Address
    Value:
      Fn::GetAtt:
      - "MongoDbInstance"
      - "PublicIp"
  DatabaseEndpointPort:
    Description: DB Endpoint Port
    Value: !Ref DatabasePort